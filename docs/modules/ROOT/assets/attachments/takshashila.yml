openapi: 3.0.3
info:
  contact:
    email: admin@takshashila.com
    name: Takshashila
  license:
    name: Takshashila, Inc.
    url: https://www.takshashila.com/terms-of-use.html
  termsOfService: https://www.takshashila.com/terms-of-use.html
  title: Takshashila Api
  version: 0.0.1-SNAPSHOT
servers:
  - url: https://localhost:8080/api
security:
  - ApiKeyAuth: []
tags:
  - description: Public Apis
    name: Public
externalDocs:
  description: Takshashila API Documentation
  url: https://pccofvns.github.io/
paths:
  /v1/public/picklists/{picklist}:
    get:
      description: This service returns the map of key and values for particular picklist
      operationId: getPicklistByKey
      parameters:
        - description: Locale of the banner has to be rendered e.g. en or es
          example: en
          in: header
          name: lang
          required: false
          schema:
            default: en
            type: string
        - description: Picklist name
          example: citizenshipStatus
          in: path
          name: picklist
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PicklistResponse'
          description: Returns the map of key and values for particular picklist
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      summary: Picklist return by key
      tags:
        - Public
components:
  responses:
    InvalidRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Invalid request
    NotFound:
      description: Resource Not Found
    ServerError:
      description: Server error
    Unauthorized:
      description: Unauthorized
  schemas:
    ErrorMessage:
      description: Validation Error
      properties:
        argsMap:
          additionalProperties:
            description: The value of the arguments identified by the key
            type: string
          description: The name and value pairs of arguments of sn error message.
          example:
            '0': Neo
          type: object
        defaultMessage:
          description: The default message text corresponding to error code
          example: First name is not valid
          type: string
        errorCode:
          description: The error code specific to the field
          example: Validate.Name.firstName
          type: string
        field:
          description: Field name
          example: Name.firstName
          type: string
      type: object
    ErrorResponse:
      description: Validation Error Response
      properties:
        errors:
          description: Indicates validation Errors
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
        instance:
          description: The URL that was used for operations on the resource
          example: https://takshashila.com/v1/users/1234
          format: uri
          type: string
        status:
          description: Indicates error status code
          example: '400'
          format: int32
          type: integer
        timestamp:
          description: Indicates timestamp of server
          example: 2023-01-01 XX
          format: date-time
          type: string
        title:
          description: A message to the client from server with respect to this error
          example: Invalid Request
          type: string
        type:
          description: A URL to a page with more details regarding the problem.
          example: https://example.com/probs/cant-view-account-details
          format: uri
          type: string
      type: object
    Picklist:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    PicklistResponse:
      properties:
        picklists:
          items:
            $ref: '#/components/schemas/Picklist'
          type: array
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: authorization
      type: apiKey
