/*
 * This file is generated by jOOQ.
 */
package com.pccofvns.ts.domain.tables.records;


import com.pccofvns.ts.domain.tables.UserRoleX;

import jakarta.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleXRecord extends TableRecordImpl<UserRoleXRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ts_qa.user_role_x.user_id</code>.
     */
    public UserRoleXRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ts_qa.user_role_x.user_id</code>.
     */
    @NotNull
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ts_qa.user_role_x.role_id</code>.
     */
    public UserRoleXRecord setRoleId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ts_qa.user_role_x.role_id</code>.
     */
    @NotNull
    public Long getRoleId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserRoleX.USER_ROLE_X.USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return UserRoleX.USER_ROLE_X.ROLE_ID;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public Long component2() {
        return getRoleId();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public Long value2() {
        return getRoleId();
    }

    @Override
    public UserRoleXRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRoleXRecord value2(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRoleXRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleXRecord
     */
    public UserRoleXRecord() {
        super(UserRoleX.USER_ROLE_X);
    }

    /**
     * Create a detached, initialised UserRoleXRecord
     */
    public UserRoleXRecord(Long userId, Long roleId) {
        super(UserRoleX.USER_ROLE_X);

        setUserId(userId);
        setRoleId(roleId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRoleXRecord
     */
    public UserRoleXRecord(com.pccofvns.ts.domain.tables.pojos.UserRoleX value) {
        super(UserRoleX.USER_ROLE_X);

        if (value != null) {
            setUserId(value.userId());
            setRoleId(value.roleId());
            resetChangedOnNotNull();
        }
    }
}
