/*
 * This file is generated by jOOQ.
 */
package com.pccofvns.ts.domain.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public record User(
    Long id,
    String username,
    String password,
    Boolean credentialsNonExpired,
    Boolean nonExpired,
    Boolean nonLocked,
    Boolean enabled
) implements Serializable {

    private static final long serialVersionUID = 1L;


    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final User other = (User) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.credentialsNonExpired == null) {
            if (other.credentialsNonExpired != null)
                return false;
        }
        else if (!this.credentialsNonExpired.equals(other.credentialsNonExpired))
            return false;
        if (this.nonExpired == null) {
            if (other.nonExpired != null)
                return false;
        }
        else if (!this.nonExpired.equals(other.nonExpired))
            return false;
        if (this.nonLocked == null) {
            if (other.nonLocked != null)
                return false;
        }
        else if (!this.nonLocked.equals(other.nonLocked))
            return false;
        if (this.enabled == null) {
            if (other.enabled != null)
                return false;
        }
        else if (!this.enabled.equals(other.enabled))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.credentialsNonExpired == null) ? 0 : this.credentialsNonExpired.hashCode());
        result = prime * result + ((this.nonExpired == null) ? 0 : this.nonExpired.hashCode());
        result = prime * result + ((this.nonLocked == null) ? 0 : this.nonLocked.hashCode());
        result = prime * result + ((this.enabled == null) ? 0 : this.enabled.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(credentialsNonExpired);
        sb.append(", ").append(nonExpired);
        sb.append(", ").append(nonLocked);
        sb.append(", ").append(enabled);

        sb.append(")");
        return sb.toString();
    }
}
